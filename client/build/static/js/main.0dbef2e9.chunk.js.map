{"version":3,"sources":["styles/images/gitlab.png","App.js","components/HomePageComponent.js","components/ListUrlComponent.js","components/loadingSpinner.js","components/AddGitURL.js","components/HomeProfile.js","routers/AppRouter.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","console","log","fetch","method","headers","Accept","Content-Type","body","then","res","json","react_default","a","createElement","className","src","logo","alt","id","href","Component","HomePageComponent","AppBar_default","position","Toolbar_default","Link","to","IconButton_default","color","aria-label","Home_default","Typography_default","variant","Button_default","ListUrlComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleExpandClick","setState","state","expanded","listdata","data","_this2","Rx","fromPromise","subscribe","name","concat","_this3","classes","components_HomePageComponent","map","x","i","Card_default","CardHeader_default","avatar","Avatar_default","CheckCircle_default","title","app_name","appId","subheader","classnames","expand","defineProperty","expandOpen","onClick","aria-expanded","ExpandMore_default","test","Collapse_default","in","timeout","unmountOnExit","CardContent_default","paragraph","React","withStyles","theme","card","maxWidth","media","height","paddingTop","actions","display","transform","transition","transitions","create","duration","shortest","marginLeft","breakpoints","up","marginRight","backgroundColor","red","loadingSpinner","CircularProgress_default","thickness","AddGitURL","context","handleClickButton","bind","assertThisInitialized","socket","io","document","getElementById","pipe","value","filter","url","JSON","stringify","on","style","innerHTML","loading","components_loadingSpinner","Paper_default","elevation","TextField_default","label","type","autoComplete","margin","onPress","maxHeight","overflow","padding","background","fontSize","List_default","HomeProfile","avatar_url","username","email","web_url","AppRouter","HashRouter","Route","path","component","exact","Switch","Boolean","window","location","hostname","match","ReactDOM","render","routers_AppRouter","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0dbef2e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gitlab.11d38b71.png\";","import React, { Component } from 'react';\nimport logo from './styles/images/gitlab.png';\nimport './styles/App.css';\n\n\nclass App extends Component {\n\n  test() {\n    console.log(\"clicked\");\n    const url = \"https://github.com/ishawakankar/test2.git\";\n    fetch(`/deploy`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: url\n    })\n      .then(res => { return res.json() })\n      .then(res => console.log(res))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <a className=\"App-link\" id=\"loginButton\" href={`/auth`}> Connect using Gitlab </a>\n          {/* <button onClick={this.test}> test </button> */}\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/*eslint react/jsx-filename-extension: 0 */\n\nimport React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Home from '@material-ui/icons/Home';\nimport { Link } from 'react-router-dom';\nimport '../styles/homepage.css';\n\n\n\nfunction HomePageComponent() {\n  return (\n    <div className=\"root\">\n      <AppBar position=\"static\" className=\"app\" >\n        <Toolbar>\n          <Link to={`/home`} className=\"lnk\">\n            <IconButton className=\"menuButton\" color=\"inherit\" aria-label=\"Menu\">\n              <Home />\n            </IconButton>\n          </Link>\n          <Link to={`/listUrl`} className=\"lnk\">\n          <Typography variant=\"h6\" color=\"inherit\" className=\"grow\">\n             App \n          </Typography>\n          </Link>\n          <Link to={`/newApp`} className=\"lnk\">\n          <Typography variant=\"h6\" color=\"inherit\" className=\"grow\">\n             NewApp \n          </Typography>\n          </Link>\n          {/* <span className=\"heading\">\n          Rx-Actor Model</span> */}\n        \n          <Button className=\"heading\"\n          color=\"inherit\"\n          href={`/logout`}>\n          Logout\n        </Button>\n\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default HomePageComponent;\n","/*eslint react/jsx-filename-extension: 0 */\n/*eslint react/prop-types: 0 */\n\nimport React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport classnames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport CheckCircle from '@material-ui/icons/CheckCircle';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport red from '@material-ui/core/colors/red';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport HomePageComponent from './HomePageComponent';\nimport '../styles/ListUrlComponent.css';\nimport * as Rx from 'rxjs-compat'\n\nconst styles = theme => ({\n  card: {\n    maxWidth: 400,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  actions: {\n    display: 'flex',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n    marginLeft: 'auto',\n    [theme.breakpoints.up('sm')]: {\n      marginRight: -8,\n    },\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n});\n\nclass ListUrlComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      listdata: [],\n      data: [],\n      expanded: false\n    };\n  }\n\n  handleExpandClick = () => {\n    this.setState(state => ({ expanded: !this.state.expanded }));\n  };\n\n  componentWillMount() {\n    Rx.Observable.fromPromise(fetch('/apps').then((data) => data.json()))\n      .subscribe((data) => {\n        this.setState({\n          data: data\n        })\n      });\n  }\n\n  test(name){\n      fetch(`/downloadLog/${name}`)\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    console.log(this.state.data)\n    return (\n      <div>\n        <HomePageComponent />\n        {this.state.data.map((x, i) =>\n          <div className=\"root\">\n            <Card className=\"card\">\n              <CardHeader\n                avatar={\n                  <Avatar aria-label=\"Recipe\" className=\"avatar\">\n                    <CheckCircle className=\"checkCircle\" />\n                  </Avatar>\n                }\n                title={x.app_name + \"( Id: \" + x.appId + \" )\"}\n                subheader=\"September 14, 2016\"\n              />\n              <IconButton\n                className={classnames(classes.expand, {\n                  [classes.expandOpen]: this.state.expanded,\n                })}\n                onClick={this.handleExpandClick}\n                aria-expanded={this.state.expanded}\n                aria-label=\"Show more\"\n              >\n                <ExpandMoreIcon />\n              </IconButton>\n              <button onClick={()=>this.test(x.app_name)}> Download Log  </button>\n\n              <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\n                <CardContent>\n                  <Typography paragraph>Method:</Typography>\n                    Test\n                </CardContent>\n              </Collapse>\n            </Card>\n          </div>\n        )\n        }\n      </div>\n    );\n  }\n}\n//export default (ListUrlComponent);\nexport default withStyles(styles)(ListUrlComponent);","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction loadingSpinner(props) {\n  return (\n    <div>\n      <CircularProgress className= \"progress\" thickness={7} />\n    </div>\n  );\n}\n\nexport default (loadingSpinner);","/*eslint react/jsx-filename-extension: 0 */\n/* eslint react/forbid-prop-types: 0 */\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List'\nimport HomePageComponent from './HomePageComponent';\nimport ProgressBar from './loadingSpinner';\nimport '../styles/AddGitUrl.css';\nimport * as Rx from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport io from 'socket.io-client';\n// const env = require('../../../env_config');\n\nclass AddGitURL extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      context: ''\n    }\n    this.handleClickButton = this.handleClickButton.bind(this);\n  }\n\n  componentDidMount() {\n    const socket = io(); \n    console.log('before rxjs');\n    Rx.fromEvent(document.getElementById(\"outlined-email-input\"), \"click\")\n      .pipe(map(() => {\n        return document.getElementById(\"outlined-email-input2\").value;\n      }),\n        filter((data) => {\n          return data !== \"\"\n        }))\n      .subscribe((url) => {\n        fetch(`/deploy`, {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            \"url\": url\n          })\n        })\n          .then(res => res.json())\n          .then(res => {\n            if (res) {\n              console.log('response is: ',res);\n              this.setState({ context: '' })\n            }\n            return res;\n          })\n          .then(res => console.log('this is res: ', res))\n      })\n\n    socket.on('chat', (data) => {\n      document.getElementById(\"logger\").style.display = 'block';\n      document.getElementById(\"logger\").innerHTML += `${data} <br/>`;\n    })\n\n  }\n\n  handleClickButton() {\n    console.log('inside handleClickButton', this.state.loading);\n    if (document.getElementById(\"outlined-email-input2\").value) {\n      this.setState({\n        context: <ProgressBar />\n      })\n    }\n  }\n\n\n  render() {\n    const { context } = this.state;\n    return (\n      <div className=\"main\">\n        <HomePageComponent />\n        <Paper className=\"root1\" elevation={20}>\n          <div className=\"text1\">\n            <TextField\n              id=\"outlined-email-input2\"\n              label=\"GitURL\"\n              className=\"textField1\"\n              type=\"email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              className=\"button1\"\n              id=\"outlined-email-input\"\n              name=\"buttonSubmit\"\n              onClick={this.handleClickButton}\n              onPress = {this.props.onClick}\n            >\n              Deploy\n                </Button>\n            {context}\n          </div>\n        </Paper>\n\n        <Paper id=\"logger\" className={\"root2\"} style={{ maxHeight: 150, overflow: 'auto', padding: 20, background: \"black\", color: \"white\", display: 'none', fontSize: '0.8rem' }}>\n          <List>\n\n          </List>\n        </Paper>\n\n      </div>\n    )\n  }\n}\nexport default AddGitURL;\n\n\n\n\n\n","/*eslint react/jsx-filename-extension: 0 */\n\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport * as Rx from 'rxjs-compat';\nimport Avatar from '@material-ui/core/Avatar';\nimport '../styles/home.css';\n\nimport { Link } from 'react-router-dom';\nimport HomePageComponent from './HomePageComponent';\n\n// import '../styles/homepage.css';\n\n\nclass HomeProfile extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      listdata: [],\n      data: []\n    };\n  }\n\n  componentWillMount() {\n    Rx.Observable.fromPromise(fetch('/profile').then((data) => data.json()))\n      .subscribe((data) => {\n        this.setState({\n          data: data\n        })\n        \n      });\n\n      \n  }\n\n\nrender() {\n  return (\n    <div className=\"root\">\n      <HomePageComponent />\n\n      <Paper className=\"root1\" elevation={20}>\n\n        \n\n        <div className=\"profile\">\n          \n          <div className=\"text\">\n            Profile Details:\n          </div>\n          <br/><br/><br/>\n          \n          <div className=\"details\">\n\n          <div className=\"flex-container\">\n             <div className=\"flex-item\">\n                <Avatar\n                alt=\"Thumb\"\n                src={this.state.data.avatar_url}\n                // \"https://upload.wikimedia.org/wikipedia/commons/f/f4/User_Avatar_2.png\"\n                // src=\"https://secure.gravatar.com/avatar/a5ecc9d1b6a72e80aa50cc5275db0757?s=800&d=identicon\"\n                className=\"avatar1\"\n                />\n                <br/><br/>\n             </div>\n\n             <div className=\"flex-item1\">\n                \n                <div className=\"root\">\n                    {console.log('state',this.state.data)}\n                    {console.log('state2',this.state.data)}\n                      \n                      <strong>Name:</strong> &nbsp;&nbsp; {this.state.data.name} <br/>\n                      <strong>Username:</strong> &nbsp;&nbsp; {this.state.data.username}<br/>\n                      <strong>Email:</strong> &nbsp;&nbsp; {this.state.data.email}<br/>\n                      <strong>Git URL:</strong> &nbsp;&nbsp; \n                      <a href={this.state.data.web_url}>{this.state.data.web_url}</a><br/>\n                  </div>\n              \n             </div>\n          </div>\n          </div>\n\n        </div>\n\n      </Paper>\n\n    </div>\n\n  );\n\n}\n}\nexport default (HomeProfile);\n","/*eslint react/jsx-filename-extension: 0 */\n\nimport React from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport App from '../App';\nimport ListUrlComponent from '../components/ListUrlComponent';\nimport AddGitURL from '../components/AddGitURL';\nimport HomeProfile from '../components/HomeProfile';\n\n\nfunction AppRouter () {\n   return ( <HashRouter>\n    <div>\n        <Route  path='/' component={App} exact={true} />\n        <Switch>\n            <Route  path='/home'  component={HomeProfile}  />\n            <Route  path='/listUrl'  component={ListUrlComponent} />\n            <Route  path='/newApp'  component={AddGitURL} />\n        </Switch>\n    </div>\n    </HashRouter>)\n}\nexport default AppRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport AppRouter from './routers/AppRouter';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}